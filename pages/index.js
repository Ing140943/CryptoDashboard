import Head from 'next/head'
import styles from '../styles/Home.module.css'
import CoinGecko from 'coingecko-api'



const coinGeckoClient = new CoinGecko();

function hilight(e){
  e.target.style.background = "lightgrey"
}
function hilight2(e){
  e.target.style.background = "honeydew"
}
function hilight3(e){
  e.target.style.background = "oldlace"
}

function unhilight(e){
  e.target.style.background = "white"
}

export default function Home(props) {

  const { data } = props.result
  console.log(data)
  const formatPercent = number =>
  `${new Number(number).toFixed(2)}%`

  const formatDollar = (number, maximumSignificantDigits) =>
    new Intl.NumberFormat(
      'en-US',
      {
        style: 'currency',
        currency: 'usd',
        maximumSignificantDigits
      }
    ).format(number);
  return (
    <div className={styles.container}>
    
      <Head>
        <title>Crypto Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/bitcoin.png" />
      </Head>
      <h1 className={styles.header}>Crypto Dashboard</h1>
      <table className='table'>
        <thead>
          <tr>
            <th className={styles.row}>Symbol</th>
            <th className={styles.row}>24H Change</th>
            <th className={styles.row}>Price</th>
            <th className={styles.row}>All Time High</th>
            <th className={styles.row}>Market Cap</th>
          </tr>
        </thead>
        <tbody className={styles.body}>
          {data.map(coin => (
            <tr key={coin.id} >
              <td onMouseOver={hilight} onMouseOut={unhilight}>
                <img 
                src={coin.image}
                style={{width: 25, height: 25, marginRight:10}}/>
                {coin.symbol.toUpperCase()}
              </td>
              <td onMouseOver={hilight} onMouseOut={unhilight} >
                <span className={coin.price_change_percentage_24h > 0?( 'text-success') :'text-danger'} >
                {formatPercent(coin.price_change_percentage_24h)} 
                </span>
              </td>
              <td onMouseOver={hilight} onMouseOut={unhilight}>{formatDollar(coin.current_price, 20)}</td>
              <td onMouseOver={hilight3} onMouseOut={unhilight} >{formatDollar(coin.ath)}</td>
              <td onMouseOver={hilight2} onMouseOut={unhilight} >{formatDollar(coin.market_cap, 12)}</td>
              </tr>
          ))}
        </tbody>
      </table>
     </div>
  )
}

export async function getServerSideProps(context) {
  const params = {
    order: CoinGecko.ORDER.MARKET_CAP_DESC
  }
  const result = await coinGeckoClient.coins.markets({params});
  return {
    props:{
      result
    }
  }
}